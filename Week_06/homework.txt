64. 最小路径和
int minPathSum(int** grid, int gridSize, int* gridColSize){
    if(gridSize==0||*gridColSize==0) return 0;
    int dp[gridSize][*gridColSize];
    int i,j;
    //初始化
    dp[0][0]=grid[0][0];

    for(i=1;i<gridSize;i++)//初始列
    dp[i][0]=dp[i-1][0]+grid[i][0];

    for(j=1;j<*gridColSize;j++)
    dp[0][j]=dp[0][j-1]+grid[0][j];

    for(i=1;i<gridSize;i++)
        for(j=1;j<*gridColSize;j++)
        {
            dp[i][j]=(dp[i-1][j]<dp[i][j-1]?dp[i-1][j]:dp[i][j-1])+grid[i][j];
        }
    return dp[i-1][j-1];
}

647. 回文子串
int countSubstrings(char* s)
{
    int len = strlen(s), num = 0;
    for (int start = 0, left, right; start < len; ++start, ++num) {  //++num 原因是因为每一个字母本身就是回文串
        for (left = start,   right  = start+1; left>=0 && right<len && s[left] == s[right]; --left, ++right,++num);
        for (left = start-1, right  = start+1; left>=0 && right<len && s[left] == s[right]; --left, ++right,++num);
    }
    return num;
}
